#!/usr/bin/env python

import json
import os
import re
import subprocess
import sys

content=dict({
    'stations': []
})

mac_address_re = re.compile('(?P<mac>([0-9a-fA-F]:?){12})')
mib_item_re = re.compile('(?P<key>.*)=(?P<value>.*)')

try:
    result = subprocess.Popen(['/usr/bin/env', 'hostapd_cli', '-p{{ hostapd__ctrl_interface }}', '-i{{ hostapd__interface }}', 'all_sta'], stdout=subprocess.PIPE, stderr=subprocess.PIPE, universal_newlines=True)
    (stdout, stderr) = result.communicate()
    # if is none => no station have been parsed
    # if is dict => we are currently parsing a station
    station = None
    for line in stdout.splitlines():
        mac = mac_address_re.match(line)
        if mac:
            station = dict({'mac': line})
            content['stations'].append(station)
            continue
        item = mib_item_re.match(line)
        if item and station:
            station[item.group('key')]=item.group('value')
except subprocess.CalledProcessError as e:
    content['error'] = str(e)

content['stations_number'] = len(content['stations'])

if len(content) == 0:
    content = None

print(json.dumps(content))
sys.exit(0)
